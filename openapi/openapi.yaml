openapi: 3.0.0
info:
  description: "Magistrala Call Home Server"
  version: 0.0.1
  title: Call-Home
  termsOfService: ""
  contact:
    email: "infos@abstractmachines.fr"
  license:
    name: Apache 2.0
    url: https://github.com/andychao217/callhome/blob/master/LICENSE
tags:
  - name: telemetry
    description: Telemetry Service
    externalDocs:
      description: Find out more
      url: https://github.com/andychao217/callhome
paths:
  /:
    get:
      tags:
        - ui
      summary: serve ui
      operationId: serve ui
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Offset"
        - $ref: "#/components/parameters/From"
        - $ref: "#/components/parameters/To"
        - $ref: "#/components/parameters/Country"
        - $ref: "#/components/parameters/City"
        - $ref: "#/components/parameters/Version"
        - $ref: "#/components/parameters/Service"
      responses:
        "200":
          description: found
          content:
            text/html:
              schema:
                type: string
  /telemetry/summary:
    get:
      tags:
        - telemetry summary
      summary: get telemetry summary
      operationId: retrieve-summary
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Offset"
        - $ref: "#/components/parameters/From"
        - $ref: "#/components/parameters/To"
        - $ref: "#/components/parameters/Country"
        - $ref: "#/components/parameters/City"
        - $ref: "#/components/parameters/Version"
        - $ref: "#/components/parameters/Service"
      responses:
        "200":
          description: found
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/TelemetrySummaryRes"
        "429":
          description: Too many requests
        "401":
          description: Request is unauthorized
  /telemetry:
    post:
      tags:
        - telemetry
      summary: Create new telemetry record
      description: "Create telemetry record"
      operationId: save
      requestBody:
        $ref: "#/components/requestBodies/TelemetryReq"
      responses:
        "201":
          description: Created
        "429":
          description: Too many requests
        "401":
          description: Request is unauthorized
    get:
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Offset"
        - $ref: "#/components/parameters/From"
        - $ref: "#/components/parameters/To"
        - $ref: "#/components/parameters/Country"
        - $ref: "#/components/parameters/City"
        - $ref: "#/components/parameters/Version"
        - $ref: "#/components/parameters/Service"
      tags:
        - telemetry
      summary: Retrieve telemetry events
      description: Retrieve telemetry events
      operationId: retrieve
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TelemetryRes"
        "400":
          description: Invalid status value
        "429":
          description: Too many requests
        "401":
          description: Request is unauthorized
servers:
  - url: https://localhost
components:
  parameters:
    Limit:
      name: limit
      description: Size of the subset to retrieve.
      in: query
      schema:
        type: integer
        default: 10
        maximum: 100
        minimum: 1
      required: false
    Offset:
      name: offset
      description: Number of items to skip during retrieval.
      in: query
      schema:
        type: integer
        default: 0
        minimum: 0
      required: false
    From:
      name: from
      description: From date filter.
      in: query
      schema:
        type: string
        default: ""
      required: false
    To:
      name: to
      description: From date filter.
      in: query
      schema:
        type: string
        default: ""
      required: false
    Country:
      name: country
      description: From country filter.
      in: query
      schema:
        type: string
        default: ""
      required: false
    City:
      name: city
      description: From city filter.
      in: query
      schema:
        type: string
        default: ""
      required: false
    Version:
      name: version
      description: From version filter.
      in: query
      schema:
        type: string
        default: ""
      required: false
    Service:
      name: service
      description: From service filter.
      in: query
      schema:
        type: string
        default: ""
      required: false
  requestBodies:
    TelemetryReq:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TelemetryReq"
      description: Telemetry request
      required: true
  schemas:
    TelemetryReq:
      type: object
      properties:
        ip_address:
          type: string
        service:
          type: string
        magistrala_version:
          type: string
        last_seen:
          type: string
    TelemetryRes:
        type: object
        properties:
          ip_address:
            type: string
          magistrala_version:
            type: string
          last_seen:
            type: string
          services:
            type: array
            items:
              type: string
          longitude:
            type: number
            format: float
          latitude:
            type: number
            format: float
          country:
            type: string
          city:
            type: string
          timestamp:
            type: string
    TelemetrySummaryRes:
        type: object
        properties:
          total_deployments:
            type: integer
          countries:
            type: object
            properties:
              country:
                type: string
              number_of_deployments:
                type: integer
          cities:
            type: array
            items:
              type: string
          services:
            type: array
            items:
              type: string
          versions:
            type: array
            items:
              type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: apikey

security:
  - ApiKeyAuth: []
